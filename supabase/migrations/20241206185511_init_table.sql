create table "public"."speech_scripts" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now(),
    "refno" bigint not null,
    "revision" bigint not null default '1'::bigint,
    "content" text not null default ''::text,
    "original" text not null,
    "status" text not null default 'Draft'::text
);


alter table "public"."speech_scripts" enable row level security;

CREATE UNIQUE INDEX speech_script_pkey ON public.speech_scripts USING btree (id);

alter table "public"."speech_scripts" add constraint "speech_script_pkey" PRIMARY KEY using index "speech_script_pkey";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.on_update()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
BEGIN
    -- Set the updated_at field to the current timestamp
    NEW.updated_at = now();
    
    -- Increment the revision field by 1
    NEW.revision = OLD.revision + 1;
    
    -- Return the modified row
    RETURN NEW; 
END;
$function$
;

grant delete on table "public"."speech_scripts" to "anon";

grant insert on table "public"."speech_scripts" to "anon";

grant references on table "public"."speech_scripts" to "anon";

grant select on table "public"."speech_scripts" to "anon";

grant trigger on table "public"."speech_scripts" to "anon";

grant truncate on table "public"."speech_scripts" to "anon";

grant update on table "public"."speech_scripts" to "anon";

grant delete on table "public"."speech_scripts" to "authenticated";

grant insert on table "public"."speech_scripts" to "authenticated";

grant references on table "public"."speech_scripts" to "authenticated";

grant select on table "public"."speech_scripts" to "authenticated";

grant trigger on table "public"."speech_scripts" to "authenticated";

grant truncate on table "public"."speech_scripts" to "authenticated";

grant update on table "public"."speech_scripts" to "authenticated";

grant delete on table "public"."speech_scripts" to "service_role";

grant insert on table "public"."speech_scripts" to "service_role";

grant references on table "public"."speech_scripts" to "service_role";

grant select on table "public"."speech_scripts" to "service_role";

grant trigger on table "public"."speech_scripts" to "service_role";

grant truncate on table "public"."speech_scripts" to "service_role";

grant update on table "public"."speech_scripts" to "service_role";

create policy "Enable CRUD"
on "public"."speech_scripts"
as permissive
for all
to public
using (true);


CREATE TRIGGER update_trigger BEFORE UPDATE ON public.speech_scripts FOR EACH ROW EXECUTE FUNCTION on_update();


